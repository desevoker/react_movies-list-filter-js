{"version":3,"sources":["components/SearchBox/SearchBox.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Sidebar/Sidebar.jsx","App.jsx","index.jsx"],"names":["SearchBox","query","updateQuery","className","htmlFor","value","onChange","event","target","type","id","placeholder","MovieCard","movie","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Sidebar","App","useState","setQuery","visibleMovies","filter","lcTitle","toLowerCase","lcDescription","normalizedQuery","trim","includes","getVisibleMovies","moviesFromServer","newQuery","ReactDOM","render","document","getElementById"],"mappings":"quEAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACvB,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOC,QAAQ,eAAeD,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEE,MAAOJ,EACPK,SAAU,SAACC,GACTL,EAAYK,EAAMC,OAAOH,QAE3BI,KAAK,OACLC,GAAG,eACHP,UAAU,QACVQ,YAAY,6BCdTC,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKW,IAAKD,EAAME,OAAQC,IAAI,kBAIhC,sBAAKb,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKW,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKb,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BU,EAAMI,aAIrC,sBAAKd,UAAU,UAAf,UACGU,EAAMK,YACP,uBACA,mBAAGC,KAAMN,EAAMO,QAAf,6BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKnB,UAAU,SAAf,SACGmB,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMW,cCJfC,G,MAAU,kBACrB,qBAAKtB,UAAU,UAAf,iC,OCsBK,IAAMuB,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc2B,EAAd,KAEMC,EAlBR,SAA0BP,EAA1B,GAA8C,IAAVrB,EAAS,EAATA,MAClC,OAAKA,EAIEqB,EAAOQ,QAAO,SAACjB,GACpB,IAAMkB,EAAUlB,EAAMI,MAAMe,cACtBC,EAAgBpB,EAAMK,YAAYc,cAClCE,EAAkBjC,EAAMkC,OAAOH,cAErC,OAAOD,EAAQK,SAASF,IACjBD,EAAcG,SAASF,MATvBZ,EAgBae,CAAiBC,EAAkB,CAAErC,UAE3D,OACE,sBAAKE,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEF,MAAOA,EACPC,YAAa,SAACqC,GACZX,EAASW,MAIb,cAAC,EAAD,CAAYjB,OAAQO,OAGtB,cAAC,EAAD,QCvCNW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f42c19f9.chunk.js","sourcesContent":["export const SearchBox = ({ query, updateQuery }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          value={query}\n          onChange={(event) => {\n            updateQuery(event.target.value);\n          }}\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n        />\n      </div>\n    </div>\n  </div>\n);\n","import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import './Sidebar.scss';\n\nexport const Sidebar = () => (\n  <div className=\"sidebar\">\n    Sidebar goes here\n  </div>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\n\nimport { SearchBox } from './components/SearchBox';\nimport { MoviesList } from './components/MoviesList';\nimport { Sidebar } from './components/Sidebar';\n\nimport moviesFromServer from './api/movies.json';\n\nfunction getVisibleMovies(movies, { query }) {\n  if (!query) {\n    return movies;\n  }\n\n  return movies.filter((movie) => {\n    const lcTitle = movie.title.toLowerCase();\n    const lcDescription = movie.description.toLowerCase();\n    const normalizedQuery = query.trim().toLowerCase();\n\n    return lcTitle.includes(normalizedQuery)\n        || lcDescription.includes(normalizedQuery);\n  });\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const visibleMovies = getVisibleMovies(moviesFromServer, { query });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <SearchBox\n          query={query}\n          updateQuery={(newQuery) => {\n            setQuery(newQuery);\n          }}\n        />\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <Sidebar />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}